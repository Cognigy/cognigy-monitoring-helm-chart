{{- $targetNamespace := .Values.appNamespacesTarget }}
{{- if .Values.rules.kubernetes.enabled -}}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ .Release.Name }}-cognigy-kubernetes-rules
  labels:
    {{- include "cognigy-monitors.labels" . | nindent 4 }}
spec:
  groups:
  - name: cognigy.alert.host
    rules:
    - alert: HostUnusualNetworkThroughputIn
      expr: sum by (instance) (rate(node_network_receive_bytes_total[2m])) / 1024 / 1024 > 100
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: Host unusual network throughput in (instance {{`{{`}} $labels.instance }})
        description: "Host network interfaces are probably receiving too much data (> 100 MB/s)\n  VALUE = {{`{{`}} $value }}\n  LABELS = {{`{{`}} $labels }}"

    - alert: HostUnusualNetworkThroughputOut
      expr: sum by (instance) (rate(node_network_transmit_bytes_total[2m])) / 1024 / 1024 > 100
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: Host unusual network throughput out (instance {{`{{`}} $labels.instance }})
        description: "Host network interfaces are probably sending too much data (> 100 MB/s)\n  VALUE = {{`{{`}} $value }}\n  LABELS = {{`{{`}} $labels }}"

    - alert: HostHighCpuLoad
      expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: Host high CPU load (instance {{`{{`}} $labels.instance }})
        description: "CPU load is > 80%\n  VALUE = {{`{{`}} $value }}\n  LABELS = {{`{{`}} $labels }}"

    - alert: HostCpuStealNoisyNeighbor
      expr: avg by(instance) (rate(node_cpu_seconds_total{mode="steal"}[5m])) * 100 > 10
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Host CPU steal noisy neighbor (instance {{`{{`}} $labels.instance }})
        description: "CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit.\n  VALUE = {{`{{`}} $value }}\n  LABELS = {{`{{`}} $labels }}"

  - name: cognigy.alert.k8s
    rules:
    - alert: KubeDeploymentReplicasMismatch
      annotations:
        description: Deployment {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.deployment {{`}}`}} has not matched the expected number of replicas for longer than 15 minutes.
        runbook_url: {{ .Values.runbookUrl }}alert-name-kubedeploymentreplicasmismatch
        summary: Deployment has not matched the expected number of replicas.
      expr: |-
        (
          kube_deployment_spec_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
            >
          kube_deployment_status_replicas_available{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
        ) and (
          changes(kube_deployment_status_replicas_updated{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}[10m])
            ==
          0
        )
      for: 15m
      labels:
        severity: critical

    - alert: KubeStatefulSetReplicasMismatch
      annotations:
        description: StatefulSet {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.statefulset {{`}}`}} has not matched the expected number of replicas for longer than 15 minutes.
        runbook_url: {{ .Values.runbookUrl }}alert-name-kubestatefulsetreplicasmismatch
        summary: Deployment has not matched the expected number of replicas.
      expr: |-
        (
          kube_statefulset_status_replicas_ready{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
            !=
          kube_statefulset_status_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
        ) and (
          changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}[10m])
            ==
          0
        )
      for: 15m
      labels:
        severity: critical

    {{- if (.Values.rules.kubernetes.kubePodCrashLooping.enabled ) }}
    - alert: KubePodCrashLooping
      annotations:
        description: Pod {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.pod {{`}}`}} ({{`{{`}} $labels.container {{`}}`}}) is restarting {{`{{`}} printf "%.2f" $value {{`}}`}} times / 10 minutes.
        runbook_url: {{ .Values.runbookUrl }}alert-name-kubepodcrashlooping
        summary: Pod {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.pod {{`}}`}} is crash looping.
      expr: >
        increase(kube_pod_container_status_restarts_total{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}[10m]) > 0
        and
        kube_pod_container_status_waiting{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} == 1
      for: 15m
      labels:
        severity: critical
    {{- end }}

    {{- if (.Values.rules.kubernetes.kubePodNotReady.enabled ) }}
    - alert: KubePodNotReady
      annotations:
        description: Pod {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.pod {{`}}`}} has been in a non-ready state for longer than 15 minutes.
        runbook_url: {{ .Values.runbookUrl }}alert-name-kubepodnotready
        summary: Pod has been in a non-ready state for more than 15 minutes.
      expr: |-
        sum by (namespace, pod) (
          max by(namespace, pod) (
            kube_pod_status_phase{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}", phase=~"Pending|Unknown"}
          ) * on(namespace, pod) group_left(owner_kind) topk by(namespace, pod) (
            1, max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!="Job"})
          )
        ) > 0
      for: 15m
      labels:
        severity: critical
    {{- end }}

    {{- if (.Values.rules.kubernetes.podManyRestarts.enabled ) }}
    - alert: PodManyRestarts
      expr: increase(kube_pod_container_status_restarts_total[60m]) > 3
      annotations:
        summary: Pod {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.pod {{`}}`}} restarts too often.
        description: "Pod {{`{{`}} $labels.pod }} restarts in the last 60 minutes \n  VALUE = {{`{{`}} $value }}\n  LABELS = {{`{{`}} $labels }}"
        runbook_url: {{ .Values.runbookUrl }}alert-name-kubepodcrashlooping
      for: 2m
      labels:
        severity: warning
    {{- end }}

    {{- if (.Values.rules.kubernetes.containerOOMKilled.enabled ) }}
    - alert: ContainerOOMKilled
      expr: |-
        (sum (kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}) by (container)) -
        (sum (kube_pod_container_status_last_terminated_reason{reason="OOMKilled"} offset 5m) by (container)) > 0
      annotations:
        summary: Container {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.container {{`}}`}} OOM Killed
        description: "Container {{`{{`}} $labels.container }} OOMKilled in namespace {{`{{`}} $labels.namespace {{`}}`}}\n LABELS = {{`{{`}} $labels }}"
      for: 3m
      labels:
        severity: warning
    {{- end }}

    {{- if (.Values.rules.kubernetes.cpuThrottlingBackendServiceHigh.enabled ) }}
    - alert: CPUThrottlingBackendServiceHigh
      annotations:
        description: '{{`{{`}} $value | humanizePercentage {{`}}`}} throttling of CPU in namespace {{`{{`}} $labels.namespace {{`}}`}} for container {{`{{`}} $labels.container {{`}}`}} in pod {{`{{`}} $labels.pod {{`}}`}}.'
        runbook_url: {{ .Values.runbookUrl }}alert-name-cputhrottlinghigh
        summary: Processes experience elevated CPU throttling.
      expr: |-
        sum(increase(container_cpu_cfs_throttled_periods_total{container!="", pod=~"mongodb.*|redis.*|rabbitmq.*|traefik.*|nginx.*|postgres.*|mysql.*"}[5m])) by (container, pod, namespace)
          /
        sum(increase(container_cpu_cfs_periods_total{}[5m])) by (container, pod, namespace)
          > ( 25 / 100 )
      for: 15m
      labels:
        severity: warning
    {{- end }}

{{- end -}}